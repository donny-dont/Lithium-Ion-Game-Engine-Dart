{"name":"BlendState","qualifiedName":"lithium_ion/lithium_graphics.BlendState","comment":"<p>Contains blend state for the pipeline.</p>","isAbstract":false,"superclass":"lithium_ion/lithium_graphics.GraphicsResource","implements":[],"subclass":[],"variables":{"enabled":{"name":"enabled","qualifiedName":"lithium_ion/lithium_graphics.BlendState.enabled","comment":"<p>Whether blending operations are enabled. Enabled by default.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.bool","inner":[]}],"annotations":[]},"alphaBlendOperation":{"name":"alphaBlendOperation","qualifiedName":"lithium_ion/lithium_graphics.BlendState.alphaBlendOperation","comment":"<p>The arithmetic operation when blending alpha values.</p>\n<p>The default is <a>lithium_ion/lithium_graphics.BlendOperation.Add</a>.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"lithium_ion/lithium_graphics.BlendOperation","inner":[]}],"annotations":[]},"alphaDestinationBlend":{"name":"alphaDestinationBlend","qualifiedName":"lithium_ion/lithium_graphics.BlendState.alphaDestinationBlend","comment":"<p>The blend factor for the destination alpha; the percentage of the destination alpha included in the result.</p>\n<p>The default is <a>lithium_ion/lithium_graphics.Blend.One</a>.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"lithium_ion/lithium_graphics.Blend","inner":[]}],"annotations":[]},"alphaSourceBlend":{"name":"alphaSourceBlend","qualifiedName":"lithium_ion/lithium_graphics.BlendState.alphaSourceBlend","comment":"<p>The alpha blend factor.</p>\n<p>The default is <a>lithium_ion/lithium_graphics.Blend.One</a>.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"lithium_ion/lithium_graphics.Blend","inner":[]}],"annotations":[]},"colorBlendOperation":{"name":"colorBlendOperation","qualifiedName":"lithium_ion/lithium_graphics.BlendState.colorBlendOperation","comment":"<p>The arithmetic operation when blending color values.</p>\n<p>The default is <a>lithium_ion/lithium_graphics.BlendOperation.Add</a>.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"lithium_ion/lithium_graphics.BlendOperation","inner":[]}],"annotations":[]},"colorDestinationBlend":{"name":"colorDestinationBlend","qualifiedName":"lithium_ion/lithium_graphics.BlendState.colorDestinationBlend","comment":"<p>The blend factor for the destination color.</p>\n<p>The default is <a>lithium_ion/lithium_graphics.Blend.One</a>.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"lithium_ion/lithium_graphics.Blend","inner":[]}],"annotations":[]},"colorSourceBlend":{"name":"colorSourceBlend","qualifiedName":"lithium_ion/lithium_graphics.BlendState.colorSourceBlend","comment":"<p>The blend factor for the source color.</p>\n<p>The default is Blend.One.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"lithium_ion/lithium_graphics.Blend","inner":[]}],"annotations":[]}},"inheritedVariables":{"name":{"name":"name","qualifiedName":"lithium_ion/lithium_graphics.GraphicsResource.name","comment":"<p>The name of the resource.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]}},"methods":{"setters":{"blendFactorRed=":{"name":"blendFactorRed=","qualifiedName":"lithium_ion/lithium_graphics.BlendState.blendFactorRed=","comment":"","commentFrom":"lithium_graphics.BlendState.blendFactorRed=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.double","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"blendFactorGreen=":{"name":"blendFactorGreen=","qualifiedName":"lithium_ion/lithium_graphics.BlendState.blendFactorGreen=","comment":"","commentFrom":"lithium_graphics.BlendState.blendFactorGreen=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.double","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"blendFactorBlue=":{"name":"blendFactorBlue=","qualifiedName":"lithium_ion/lithium_graphics.BlendState.blendFactorBlue=","comment":"","commentFrom":"lithium_graphics.BlendState.blendFactorBlue=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.double","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"getters":{"blendFactorRed":{"name":"blendFactorRed","qualifiedName":"lithium_ion/lithium_graphics.BlendState.blendFactorRed","comment":"<p>The red component of the blend factor for alpha blending.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.double","inner":[]}],"parameters":{},"annotations":[]},"blendFactorGreen":{"name":"blendFactorGreen","qualifiedName":"lithium_ion/lithium_graphics.BlendState.blendFactorGreen","comment":"<p>The green component of the blend factor for alpha blending.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.double","inner":[]}],"parameters":{},"annotations":[]},"blendFactorBlue":{"name":"blendFactorBlue","qualifiedName":"lithium_ion/lithium_graphics.BlendState.blendFactorBlue","comment":"<p>The blue component of the blend factor for alpha blending.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.double","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"lithium_ion/lithium_graphics.BlendState.BlendState-","comment":"<p>Creates an instance of the BlendState class with default values.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"additive":{"name":"additive","qualifiedName":"lithium_ion/lithium_graphics.BlendState.BlendState-additive","comment":"<p>Initializes an instance of the BlendState class with settings for additive blend.</p>\n<p>This adds the destination data to the source data without using alpha.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"name":{"name":"name","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]},"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"alphaBlend":{"name":"alphaBlend","qualifiedName":"lithium_ion/lithium_graphics.BlendState.BlendState-alphaBlend","comment":"<p>Initializes an instance of the BlendState class with settings for alpha blend.</p>\n<p>This blends the source and destination data using alpha.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"nonPremultiplied":{"name":"nonPremultiplied","qualifiedName":"lithium_ion/lithium_graphics.BlendState.BlendState-nonPremultiplied","comment":"<p>Initializes an instance of the BlendState class with settings for blending with non-premultipled alpha.</p>\n<p>This blends source and destination data by using alpha while assuming the\ncolor data contains no alpha information.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"opaque":{"name":"opaque","qualifiedName":"lithium_ion/lithium_graphics.BlendState.BlendState-opaque","comment":"<p>Initializes an instance of the BlendState class with settings for opaque blend.</p>\n<p>This overwrites the source with the destination data.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"operators":{},"methods":{}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"lithium_ion/lithium_graphics.BlendState.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>lithium_ion/lithium_graphics.BlendState.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"lithium_ion/lithium_graphics.BlendState.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]},"isDisposed":{"name":"isDisposed","qualifiedName":"lithium_ion/lithium_graphics.BlendState.isDisposed","comment":"<p>Whether the object has been disposed</p>","commentFrom":"","inheritedFrom":"lithium_graphics.GraphicsResource.isDisposed","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"graphicsDevice":{"name":"graphicsDevice","qualifiedName":"lithium_ion/lithium_graphics.BlendState.graphicsDevice","comment":"<p>The <a>lithium_ion/lithium_graphics.GraphicsDevice</a> the resource is bound to.</p>","commentFrom":"","inheritedFrom":"lithium_graphics.GraphicsResource.graphicsDevice","static":false,"abstract":false,"constant":false,"return":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"lithium_ion/lithium_graphics.BlendState.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>lithium_ion/lithium_graphics.BlendState.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>lithium_ion/lithium_graphics.BlendState.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"lithium_ion/lithium_graphics.BlendState.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"lithium_ion/lithium_graphics.BlendState.noSuchMethod","comment":"<p><a>lithium_ion/lithium_graphics.BlendState.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>lithium_ion/lithium_graphics.BlendState.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>lithium_ion/lithium_graphics.BlendState.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>lithium_ion/lithium_graphics.BlendState.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"dispose":{"name":"dispose","qualifiedName":"lithium_ion/lithium_graphics.BlendState.dispose","comment":"<p>Immediately releases the unmanaged resources used by this object.</p>","commentFrom":"","inheritedFrom":"lithium_graphics.GraphicsResource.dispose","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}