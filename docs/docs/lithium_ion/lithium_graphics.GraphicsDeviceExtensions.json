{"name":"GraphicsDeviceExtensions","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions","comment":"<p>Collects the extensions available within WebGL.</p>\n<p>WebGL allows additional functionality to be exposed using an extension\nmechanism. If an extension is available it can be used by the library.</p>\n<p>All approved extensions, and draft extensions are exposed in the\nimplementation. Before using a specific extension the availablility should\nbe determined. <a href=\"http://webglstats.com/\">WebGL Stats</a> is one site that can\ncollects data on what the level of support for a certain extension is, and\nshould be used to make a judgement call on what to use.</p>\n<p>The values contained in <a>lithium_ion/lithium_graphics.GraphicsDeviceExtensions.approved</a> and <a>lithium_ion/lithium_graphics.GraphicsDeviceExtensions.draft</a> will change over time as\nnew extensions are approved or moved to draft status. Once an extension is\n<a>lithium_ion/lithium_graphics.GraphicsDeviceExtensions.approved</a> it is not likely to be removed. Any extensions in proposal stage\nare not enumerated as they have not yet been implemented.</p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"vendorPrefixes":{"name":"vendorPrefixes","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.vendorPrefixes","comment":"<p>Vendor prefixes to use when searching for extensions.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"annotations":[]},"textureFloat":{"name":"textureFloat","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.textureFloat","comment":"<p>Allows the use of 32-bit floating point values within a <a>lithium_ion/lithium_graphics.Texture</a>.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/OES_texture_float/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"textureHalfFloat":{"name":"textureHalfFloat","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.textureHalfFloat","comment":"<p>Allows the use of 16-bit floating point values within a <a>lithium_ion/lithium_graphics.Texture</a>.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/OES_texture_half_float/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"loseContext":{"name":"loseContext","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.loseContext","comment":"<p>Exposes functions which simulate losing and restoring the WebGL context.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/WEBGL_lose_context/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"standardDerivatives":{"name":"standardDerivatives","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.standardDerivatives","comment":"<p>Adds the standard derivative functions to the fragment shader.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/OES_standard_derivatives/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"vertexArrayObject":{"name":"vertexArrayObject","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.vertexArrayObject","comment":"<p>Allows the creation of <a>lithium_ion/dart-dom-web_gl.VertexArrayObject</a>s.</p>\n<p>Vertex array objects allow the state of the bound buffers to be saved and\nrestored. This cuts down on the number of calls to setup <a>lithium_ion/lithium_graphics.VertexBuffer</a>s\nand their attribute locations.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/OES_vertex_array_object/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"debugRendererInfo":{"name":"debugRendererInfo","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.debugRendererInfo","comment":"<p>Allows the querying of the underlying graphics card for debugging purposes.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"debugShaders":{"name":"debugShaders","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.debugShaders","comment":"<p>Allows access to the source code of the shader after translation to the native platform.</p>\n<p>Dependent on the underlying WebGL implementation the shaders may be\ncross-compiled to a different shading language. This provides a way to\ndebug that step.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/WEBGL_debug_shaders/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"compressedTextureS3TC":{"name":"compressedTextureS3TC","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.compressedTextureS3TC","comment":"<p>Exposes the compressed texture formats contained in <a>lithium_ion/dart-dom-web_gl.CompressedTextureS3TC</a>.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/OES_standard_derivatives/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"depthTexture":{"name":"depthTexture","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.depthTexture","comment":"<p>Allows the creation of a depth or stencil target within a frame buffer.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/OES_standard_derivatives/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"uintElementIndex":{"name":"uintElementIndex","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.uintElementIndex","comment":"<p>Allows for 32-bit index data.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/OES_element_index_uint/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"textureFilterAnisotropic":{"name":"textureFilterAnisotropic","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.textureFilterAnisotropic","comment":"<p>Exposes anisotropic filtering for <a>lithium_ion/lithium_graphics.Texture</a>s.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/EXT_texture_filter_anisotropic/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"compressedTextureAtc":{"name":"compressedTextureAtc","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.compressedTextureAtc","comment":"<p>Exposes the compressed texture formats contained in <a>lithium_ion/dart-dom-web_gl.CompressedTextureAtc</a>.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_atc/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"compressedTexturePvrtc":{"name":"compressedTexturePvrtc","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.compressedTexturePvrtc","comment":"<p>Exposes the compressed texture formats contained in [WebGL.CompressedTexturePvrtc.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"colorBufferHalfFloat":{"name":"colorBufferHalfFloat","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.colorBufferHalfFloat","comment":"<p>Allows 16-bit floating point values to be rendered into a framebuffer object.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_half_float/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"colorBufferFloat":{"name":"colorBufferFloat","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.colorBufferFloat","comment":"<p>Allows 32-bit floating point values to be rendered into a framebuffer object.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/WEBGL_color_buffer_float/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"fragDepth":{"name":"fragDepth","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.fragDepth","comment":"<p>Adds the ability to set the depth value of a fragment from within the fragment shader.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/EXT_frag_depth/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"sRGB":{"name":"sRGB","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.sRGB","comment":"<p>Allows the usage of the sRGB color space for rendering.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/EXT_sRGB/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"drawBuffers":{"name":"drawBuffers","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.drawBuffers","comment":"<p>Exposes multiple render target functionality.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/WEBGL_draw_buffers/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"instancedArrays":{"name":"instancedArrays","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.instancedArrays","comment":"<p>Exposes a mechanism for native instancing.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/ANGLE_instanced_arrays/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"textureFloatLinear":{"name":"textureFloatLinear","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.textureFloatLinear","comment":"<p>Allows the linear filtering to be applied to a 32-bit floating point <a>lithium_ion/lithium_graphics.Texture</a>.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/OES_texture_float_linear/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"textureHalfFloatLinear":{"name":"textureHalfFloatLinear","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.textureHalfFloatLinear","comment":"<p>Allows the linear filtering to be applied to a 16-bit floating point <a>lithium_ion/lithium_graphics.Texture</a>.</p>\n<p>For more information view the <a href=\"http://www.khronos.org/registry/webgl/extensions/OES_texture_half_float_linear/\">specification</a>.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"approved":{"name":"approved","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.approved","comment":"<p>Gets all the extensions in an approved state.</p>\n<p>Extensions in an approved state are more likely to be available for use.</p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"parameters":{},"annotations":[]},"draft":{"name":"draft","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.draft","comment":"<p>Gets all the extensions in a draft state.</p>\n<p>Extensions in a draft state are less likely to be available for use and\nmay be subject to change.</p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"parameters":{},"annotations":[]},"all":{"name":"all","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.all","comment":"<p>Gets all extensions.</p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{},"methods":{}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>lithium_ion/lithium_graphics.GraphicsDeviceExtensions.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>lithium_ion/lithium_graphics.GraphicsDeviceExtensions.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>lithium_ion/lithium_graphics.GraphicsDeviceExtensions.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"lithium_ion/lithium_graphics.GraphicsDeviceExtensions.noSuchMethod","comment":"<p><a>lithium_ion/lithium_graphics.GraphicsDeviceExtensions.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>lithium_ion/lithium_graphics.GraphicsDeviceExtensions.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>lithium_ion/lithium_graphics.GraphicsDeviceExtensions.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>lithium_ion/lithium_graphics.GraphicsDeviceExtensions.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}