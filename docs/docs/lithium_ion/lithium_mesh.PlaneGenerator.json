{"name":"PlaneGenerator","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator","comment":"<p>Generates a Plane mesh.</p>","isAbstract":false,"superclass":"lithium_ion/lithium_mesh.MeshGenerator","implements":[],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{"extents=":{"name":"extents=","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.extents=","comment":"","commentFrom":"lithium_mesh.PlaneGenerator.extents=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"xSegments=":{"name":"xSegments=","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.xSegments=","comment":"","commentFrom":"lithium_mesh.PlaneGenerator.xSegments=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"ySegments=":{"name":"ySegments=","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.ySegments=","comment":"","commentFrom":"lithium_mesh.PlaneGenerator.ySegments=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"doubleSided=":{"name":"doubleSided=","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.doubleSided=","comment":"","commentFrom":"lithium_mesh.PlaneGenerator.doubleSided=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"getters":{"vertexCount":{"name":"vertexCount","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.vertexCount","comment":"<p>Gets the number of vertices that will be generated.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"indexCount":{"name":"indexCount","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.indexCount","comment":"<p>Retrieves the size of the index buffer necessary to hold the generated <a>lithium_ion/lithium_graphics.Mesh</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"extents":{"name":"extents","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.extents","comment":"<p>The extents of the box.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"vector_math.Vector2","inner":[]}],"parameters":{},"annotations":[]},"xSegments":{"name":"xSegments","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.xSegments","comment":"<p>The number of segments in the x direction.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"ySegments":{"name":"ySegments","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.ySegments","comment":"<p>The number of segments in the y direction.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"doubleSided":{"name":"doubleSided","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.doubleSided","comment":"<p>Whether the plane should be double sided.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.PlaneGenerator-","comment":"<p>Creates an instance of the <a>lithium_ion/lithium_mesh.PlaneGenerator</a> class.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]},"quads":{"name":"quads","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.PlaneGenerator-quads","comment":"<p>Initializes an instance of the <a>lithium_ion/lithium_mesh.PlaneGenerator</a> class that outputs quads.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}},"operators":{},"methods":{"createPlane":{"name":"createPlane","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.createPlane","comment":"<p>Creates a single plane with the given <a>lithium_ion/lithium_mesh.PlaneGenerator.createPlane.extents</a> at the specified <a>lithium_ion/lithium_mesh.PlaneGenerator.createPlane.center</a>.</p>\n<p>This is a helper method for creating a single plane. If you are creating\nmany plane meshes prefer creating a <a>lithium_ion/lithium_mesh.PlaneGenerator</a> and using that to generate\nmultiple meshes.</p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"lithium_graphics.Mesh","inner":[]}],"parameters":{"graphicsDevice":{"name":"graphicsDevice","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]},"declaration":{"name":"declaration","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_graphics.VertexDeclaration","inner":[]}],"value":"null","annotations":[]},"extents":{"name":"extents","optional":true,"named":true,"default":false,"type":[{"outer":"vector_math.Vector2","inner":[]}],"value":"null","annotations":[]},"xSegments":{"name":"xSegments","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.int","inner":[]}],"value":"10","annotations":[]},"ySegments":{"name":"ySegments","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.int","inner":[]}],"value":"10","annotations":[]},"doubleSided":{"name":"doubleSided","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"center":{"name":"center","optional":true,"named":true,"default":false,"type":[{"outer":"vector_math.Vector3","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"createQuad":{"name":"createQuad","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.createQuad","comment":"<p>Creates a single quad with the given <a>lithium_ion/lithium_mesh.PlaneGenerator.createQuad.extents</a> at the specified <a>lithium_ion/lithium_mesh.PlaneGenerator.createQuad.center</a>.</p>\n<p>This is a helper method for creating a single quad. If you are creating\nmany quads prefer creating a <a>lithium_ion/lithium_mesh.PlaneGenerator</a> are using that to generate\nmultiple quads.</p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"lithium_graphics.Mesh","inner":[]}],"parameters":{"graphicsDevice":{"name":"graphicsDevice","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]},"declaration":{"name":"declaration","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_graphics.VertexDeclaration","inner":[]}],"value":"null","annotations":[]},"extents":{"name":"extents","optional":true,"named":true,"default":false,"type":[{"outer":"vector_math.Vector2","inner":[]}],"value":"null","annotations":[]},"center":{"name":"center","optional":true,"named":true,"default":false,"type":[{"outer":"vector_math.Vector3","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>lithium_ion/lithium_mesh.PlaneGenerator.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]},"vertexCount":{"name":"vertexCount","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.vertexCount","comment":"<p>Gets the number of vertices that will be generated.</p>","commentFrom":"","inheritedFrom":"lithium_mesh.MeshGenerator.vertexCount","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"indexCount":{"name":"indexCount","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.indexCount","comment":"<p>Retrieves the size of the index buffer necessary to hold the generated <a>lithium_ion/lithium_graphics.Mesh</a>.</p>","commentFrom":"","inheritedFrom":"lithium_mesh.MeshGenerator.indexCount","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>lithium_ion/lithium_mesh.PlaneGenerator.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>lithium_ion/lithium_mesh.PlaneGenerator.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.noSuchMethod","comment":"<p><a>lithium_ion/lithium_mesh.PlaneGenerator.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>lithium_ion/lithium_mesh.PlaneGenerator.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>lithium_ion/lithium_mesh.PlaneGenerator.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>lithium_ion/lithium_mesh.PlaneGenerator.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"generateMesh":{"name":"generateMesh","qualifiedName":"lithium_ion/lithium_mesh.PlaneGenerator.generateMesh","comment":"<p>Adds the generated mesh's data to the <a>lithium_ion/lithium_mesh.PlaneGenerator.generateMesh.vertices</a> and <a>lithium_ion/lithium_mesh.PlaneGenerator.generateMesh.indices</a>.</p>\n<p>Specifying the <a>lithium_ion/lithium_mesh.PlaneGenerator.generateMesh.center</a> point changes the location the position data is\ngenerated at. By default the mesh will be centered at \\0.0, 0.0, 0.0\\.\nAdditionally an offset into the vertex and index data can be specified by\n<a>lithium_ion/lithium_mesh.PlaneGenerator.generateMesh.vertexOffset</a> and <a>lithium_ion/lithium_mesh.PlaneGenerator.generateMesh.indexOffset</a>. If unspecified the mesh will be\ngenerated at the start of the arrays.</p>","commentFrom":"","inheritedFrom":"lithium_mesh.MeshGenerator.generateMesh","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"vertices":{"name":"vertices","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_graphics.VertexList","inner":[]}],"value":"null","annotations":[]},"indices":{"name":"indices","optional":false,"named":false,"default":false,"type":[{"outer":"dart-typed_data.Uint16List","inner":[]}],"value":"null","annotations":[]},"center":{"name":"center","optional":true,"named":false,"default":false,"type":[{"outer":"vector_math.Vector3","inner":[]}],"value":"null","annotations":[]},"vertexOffset":{"name":"vertexOffset","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.int","inner":[]}],"value":"0","annotations":[]},"indexOffset":{"name":"indexOffset","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.int","inner":[]}],"value":"0","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}