{"name":"VertexList","qualifiedName":"lithium_ion/lithium_graphics.VertexList","comment":"<p>Provides access to modify vertex data.</p>\n<p>Uses the <a>lithium_ion/lithium_graphics.VertexDeclaration</a> to provide access to vertex data through\n<a>lithium_ion/lithium_foundation.StridedList</a>s.</p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"vertexCount":{"name":"vertexCount","qualifiedName":"lithium_ion/lithium_graphics.VertexList.vertexCount","comment":"<p>The number of vertices.</p>","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"instanceCount":{"name":"instanceCount","qualifiedName":"lithium_ion/lithium_graphics.VertexList.instanceCount","comment":"<p>The number of instances.</p>","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"positions":{"name":"positions","qualifiedName":"lithium_ion/lithium_graphics.VertexList.positions","comment":"<p>The position data if present.</p>\n<p>Corresponds to the <a>lithium_ion/lithium_graphics.VertexElement</a> with a <a>lithium_ion/lithium_graphics.VertexElement.usage</a> of\n<a>lithium_ion/lithium_graphics.VertexElementUsage.Position</a> at the <a>lithium_ion/lithium_graphics.VertexElement.usageIndex</a> of 0.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"lithium_foundation.Vector3List","inner":[]}],"parameters":{},"annotations":[]},"normals":{"name":"normals","qualifiedName":"lithium_ion/lithium_graphics.VertexList.normals","comment":"<p>The normal data if present.</p>\n<p>Corresponds to the <a>lithium_ion/lithium_graphics.VertexElement</a> with a <a>lithium_ion/lithium_graphics.VertexElement.usage</a> of\n<a>lithium_ion/lithium_graphics.VertexElementUsage.Normal</a> at the <a>lithium_ion/lithium_graphics.VertexElement.usageIndex</a> of 0.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"lithium_foundation.Vector3List","inner":[]}],"parameters":{},"annotations":[]},"tangents":{"name":"tangents","qualifiedName":"lithium_ion/lithium_graphics.VertexList.tangents","comment":"<p>The tangent data if present.</p>\n<p>Corresponds to the <a>lithium_ion/lithium_graphics.VertexElement</a> with a <a>lithium_ion/lithium_graphics.VertexElement.usage</a> of\n<a>lithium_ion/lithium_graphics.VertexElementUsage.Tangent</a> at the <a>lithium_ion/lithium_graphics.VertexElement.usageIndex</a> of 0.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"lithium_foundation.Vector3List","inner":[]}],"parameters":{},"annotations":[]},"binormals":{"name":"binormals","qualifiedName":"lithium_ion/lithium_graphics.VertexList.binormals","comment":"<p>The binormal (bitangent) data if present.</p>\n<p>Corresponds to the <a>lithium_ion/lithium_graphics.VertexElement</a> with a <a>lithium_ion/lithium_graphics.VertexElement.usage</a> of\n<a>lithium_ion/lithium_graphics.VertexElementUsage.Binormal</a> at the <a>lithium_ion/lithium_graphics.VertexElement.usageIndex</a> of 0.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"lithium_foundation.Vector3List","inner":[]}],"parameters":{},"annotations":[]},"textureCoordinates":{"name":"textureCoordinates","qualifiedName":"lithium_ion/lithium_graphics.VertexList.textureCoordinates","comment":"<p>The texture coordinate data if present.</p>\n<p>Corresponds to the <a>lithium_ion/lithium_graphics.VertexElement</a> with a <a>lithium_ion/lithium_graphics.VertexElement.usage</a> of\n<a>lithium_ion/lithium_graphics.VertexElementUsage.TextureCoordinate</a> at the <a>lithium_ion/lithium_graphics.VertexElement.usageIndex</a> of 0.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"lithium_foundation.Vector2List","inner":[]}],"parameters":{},"annotations":[]},"colors":{"name":"colors","qualifiedName":"lithium_ion/lithium_graphics.VertexList.colors","comment":"<p>The color data if present.</p>\n<p>Corresponds to the <a>lithium_ion/lithium_graphics.VertexElement</a> with a <a>lithium_ion/lithium_graphics.VertexElement.usage</a> of\n<a>lithium_ion/lithium_graphics.VertexElementUsage.Color</a> at the <a>lithium_ion/lithium_graphics.VertexElement.usageIndex</a> of 0.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"lithium_foundation.Vector4List","inner":[]}],"parameters":{},"annotations":[]},"pointSizes":{"name":"pointSizes","qualifiedName":"lithium_ion/lithium_graphics.VertexList.pointSizes","comment":"<p>The point size data if present.</p>\n<p>Corresponds to the <a>lithium_ion/lithium_graphics.VertexElement</a> with a <a>lithium_ion/lithium_graphics.VertexElement.usage</a> of\n<a>lithium_ion/lithium_graphics.VertexElementUsage.PointSize</a> at the <a>lithium_ion/lithium_graphics.VertexElement.usageIndex</a> of 0.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"lithium_foundation.ScalarList","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"lithium_ion/lithium_graphics.VertexList.VertexList-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"declaration":{"name":"declaration","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.VertexDeclaration","inner":[]}],"value":"null","annotations":[]},"vertexCount":{"name":"vertexCount","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]},"instanceCount":{"name":"instanceCount","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.int","inner":[]}],"value":"0","annotations":[]}},"annotations":[]}},"operators":{},"methods":{"getBuffer":{"name":"getBuffer","qualifiedName":"lithium_ion/lithium_graphics.VertexList.getBuffer","comment":"","commentFrom":"lithium_graphics.VertexList.getBuffer","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-typed_data.TypedData","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getElement":{"name":"getElement","qualifiedName":"lithium_ion/lithium_graphics.VertexList.getElement","comment":"<p>Gets a <a>lithium_ion/lithium_foundation.StridedList</a> that holds the data of the <a>lithium_ion/lithium_graphics.VertexElement</a> with the given <a>lithium_ion/lithium_graphics.VertexList.getElement.usage</a> and <a>lithium_ion/lithium_graphics.VertexList.getElement.usageIndex</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"lithium_foundation.StridedList","inner":[]}],"parameters":{"usage":{"name":"usage","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.VertexElementUsage","inner":[]}],"value":"null","annotations":[]},"usageIndex":{"name":"usageIndex","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"lithium_ion/lithium_graphics.VertexList.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>lithium_ion/lithium_graphics.VertexList.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"lithium_ion/lithium_graphics.VertexList.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"lithium_ion/lithium_graphics.VertexList.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>lithium_ion/lithium_graphics.VertexList.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>lithium_ion/lithium_graphics.VertexList.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"lithium_ion/lithium_graphics.VertexList.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"lithium_ion/lithium_graphics.VertexList.noSuchMethod","comment":"<p><a>lithium_ion/lithium_graphics.VertexList.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>lithium_ion/lithium_graphics.VertexList.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>lithium_ion/lithium_graphics.VertexList.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>lithium_ion/lithium_graphics.VertexList.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}