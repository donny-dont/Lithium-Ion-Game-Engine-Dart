{"name":"SamplerState","qualifiedName":"lithium_ion/lithium_graphics.SamplerState","comment":"<p>Contains sampler state, which determines how to sample texture data.</p>","isAbstract":false,"superclass":"lithium_ion/lithium_graphics.GraphicsResource","implements":[],"subclass":[],"variables":{"addressU":{"name":"addressU","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.addressU","comment":"<p>The texture-address mode for the u-coordinate.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"lithium_ion/lithium_graphics.TextureAddressMode","inner":[]}],"annotations":[]},"addressV":{"name":"addressV","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.addressV","comment":"<p>The texture-address mode for the v-coordinate.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"lithium_ion/lithium_graphics.TextureAddressMode","inner":[]}],"annotations":[]},"filter":{"name":"filter","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.filter","comment":"<p>The type of filtering to use during sampling.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"lithium_ion/lithium_graphics.TextureFilter","inner":[]}],"annotations":[]}},"inheritedVariables":{"name":{"name":"name","qualifiedName":"lithium_ion/lithium_graphics.GraphicsResource.name","comment":"<p>The name of the resource.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]}},"methods":{"setters":{"maxAnisotropy=":{"name":"maxAnisotropy=","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.maxAnisotropy=","comment":"","commentFrom":"lithium_graphics.SamplerState.maxAnisotropy=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.double","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"getters":{"maxAnisotropy":{"name":"maxAnisotropy","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.maxAnisotropy","comment":"<p>The maximum anisotropy.</p>\n<p>Anisotropic filtering is only available through an extension to WebGL.\nThe maximum acceptable value is dependent on the graphics hardware, and\ncan be queried within GraphicsDeviceCapabilites. When setting the value\nthe anisotropy level will be capped to the range 1 &lt;\n<a>lithium_ion/lithium_graphics.GraphicsDeviceCapabilities.maxAnisotropyLevel</a></p>\n<p>Asserts value is a positive number greater than or equal to 1.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.double","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.SamplerState-","comment":"<p>Creates an instance of <a>lithium_ion/lithium_graphics.SamplerState</a> with default values.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"anisotropicClamp":{"name":"anisotropicClamp","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.SamplerState-anisotropicClamp","comment":"<p>Initializes an instance of <a>lithium_ion/lithium_graphics.SamplerState</a> with anisotropic filtering and texture coordinate clamping.</p>\n<p>The state object has the following settings.</p>\n<pre><code>addressU = TextureAddressMode.Clamp;\naddressV = TextureAddressMode.Clamp;\nfilter = TextureFilter.Anisotropic\nmaxAnisotropy = 4;\n</code></pre>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"anisotropicWrap":{"name":"anisotropicWrap","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.SamplerState-anisotropicWrap","comment":"<p>Initializes an instance of <a>lithium_ion/lithium_graphics.SamplerState</a> with anisotropic filtering and texture coordinate wrapping.</p>\n<p>The state object has the following settings.</p>\n<pre><code>addressU = TextureAddressMode.Wrap;\naddressV = TextureAddressMode.Wrap;\nfilter = TextureFilter.Anisotropic;\nmaxAnisotropy = 4;\n</code></pre>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"linearClamp":{"name":"linearClamp","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.SamplerState-linearClamp","comment":"<p>Initializes an instance of <a>lithium_ion/lithium_graphics.SamplerState</a> with linear filtering and texture coordinate clamping.</p>\n<p>The state object has the following settings.</p>\n<pre><code>addressU = TextureAddressMode.Clamp;\naddressV = TextureAddressMode.Clamp;\nfilter = TextureFilter.Linear;\n</code></pre>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"linearWrap":{"name":"linearWrap","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.SamplerState-linearWrap","comment":"<p>Initializes an instance of <a>lithium_ion/lithium_graphics.SamplerState</a> with linear filtering and texture coordinate wrapping.</p>\n<p>The state object has the following settings.</p>\n<pre><code>addressU = TextureAddressMode.Wrap;\naddressV = TextureAddressMode.Wrap;\nfilter = TextureFilter.Linear;\n</code></pre>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"pointClamp":{"name":"pointClamp","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.SamplerState-pointClamp","comment":"<p>Initializes an instance of <a>lithium_ion/lithium_graphics.SamplerState</a> with point filtering and texture coordinate clamping.</p>\n<p>The state object has the following settings.</p>\n<pre><code>addressU = TextureAddressMode.Clamp;\naddressV = TextureAddressMode.Clamp;\nminFilter = TextureMinFilter.Point;\nmagFilter = TextureMagFilter.Point;\n</code></pre>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"pointWrap":{"name":"pointWrap","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.SamplerState-pointWrap","comment":"<p>Initializes an instance of <a>lithium_ion/lithium_graphics.SamplerState</a> with point filtering and texture coordinate wrapping.</p>\n<p>The state object has the following settings.</p>\n<pre><code>addressU = TextureAddressMode.Wrap;\naddressV = TextureAddressMode.Wrap;\nminFilter = TextureMinFilter.Point;\nmagFilter = TextureMagFilter.Point;\n</code></pre>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"operators":{},"methods":{}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>lithium_ion/lithium_graphics.SamplerState.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]},"isDisposed":{"name":"isDisposed","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.isDisposed","comment":"<p>Whether the object has been disposed</p>","commentFrom":"","inheritedFrom":"lithium_graphics.GraphicsResource.isDisposed","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"graphicsDevice":{"name":"graphicsDevice","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.graphicsDevice","comment":"<p>The <a>lithium_ion/lithium_graphics.GraphicsDevice</a> the resource is bound to.</p>","commentFrom":"","inheritedFrom":"lithium_graphics.GraphicsResource.graphicsDevice","static":false,"abstract":false,"constant":false,"return":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>lithium_ion/lithium_graphics.SamplerState.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>lithium_ion/lithium_graphics.SamplerState.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.noSuchMethod","comment":"<p><a>lithium_ion/lithium_graphics.SamplerState.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>lithium_ion/lithium_graphics.SamplerState.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>lithium_ion/lithium_graphics.SamplerState.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>lithium_ion/lithium_graphics.SamplerState.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"dispose":{"name":"dispose","qualifiedName":"lithium_ion/lithium_graphics.SamplerState.dispose","comment":"<p>Immediately releases the unmanaged resources used by this object.</p>","commentFrom":"","inheritedFrom":"lithium_graphics.GraphicsResource.dispose","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}