{"name":"VertexDeclaration","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration","comment":"<p>Defines per-vertex data.</p>","isAbstract":false,"superclass":"lithium_ion/lithium_graphics.GraphicsResource","implements":[],"subclass":[],"variables":{},"inheritedVariables":{"name":{"name":"name","qualifiedName":"lithium_ion/lithium_graphics.GraphicsResource.name","comment":"<p>The name of the resource.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]}},"methods":{"setters":{},"getters":{"slots":{"name":"slots","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.slots","comment":"<p>The number of <a>lithium_ion/lithium_graphics.VertexBuffer</a> slots used in this declaration.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.VertexDeclaration-","comment":"<p>Creates an instance of the <a>lithium_ion/lithium_graphics.VertexDeclaration</a> class from a list of <a>lithium_ion/lithium_graphics.VertexElement</a>s.</p>\n<p>The vertex strides for each slot are computed by using the\n<a>lithium_ion/lithium_graphics.VertexElement.offset</a>s and <a>lithium_ion/lithium_graphics.VertexElement.format</a>s. If this computation\ndoes not reflect the actual stride, in the case of additional padding\nbe used, then the <a>lithium_ion/lithium_graphics.VertexDeclaration.VertexDeclaration-.strides</a> should be explicitly specified.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]},"elements":{"name":"elements","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"lithium_ion/lithium_graphics.VertexElement","inner":[]}]}],"value":"null","annotations":[]},"strides":{"name":"strides","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"position":{"name":"position","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.VertexDeclaration-position","comment":"<p>Creates an instance of the <a>lithium_ion/lithium_graphics.VertexDeclaration</a> class that contains position data.</p>\n<p>If <a>lithium_ion/lithium_graphics.VertexDeclaration.VertexDeclaration-position.simdAligned</a> is set to true then each <a>lithium_ion/lithium_graphics.VertexElement</a> will be aligned\nto a 128-bit value.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]},"simdAligned":{"name":"simdAligned","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]}},"annotations":[]},"positionColor":{"name":"positionColor","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.VertexDeclaration-positionColor","comment":"<p>Creates an instance of the <a>lithium_ion/lithium_graphics.VertexDeclaration</a> class that contains position and color data.</p>\n<p>If <a>lithium_ion/lithium_graphics.VertexDeclaration.VertexDeclaration-positionColor.simdAligned</a> is set to true then each <a>lithium_ion/lithium_graphics.VertexElement</a> will be aligned\nto a 128-bit value.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]},"simdAligned":{"name":"simdAligned","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]}},"annotations":[]},"positionColorSize":{"name":"positionColorSize","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.VertexDeclaration-positionColorSize","comment":"<p>Creates an instance of the <a>lithium_ion/lithium_graphics.VertexDeclaration</a> class that contains position, color and size data.</p>\n<p>If <a>lithium_ion/lithium_graphics.VertexDeclaration.VertexDeclaration-positionColorSize.simdAligned</a> is set to true then each <a>lithium_ion/lithium_graphics.VertexElement</a> will be aligned\nto a 128-bit value.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]},"simdAligned":{"name":"simdAligned","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]}},"annotations":[]},"positionColorTexture":{"name":"positionColorTexture","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.VertexDeclaration-positionColorTexture","comment":"<p>Creates an instance of the <a>lithium_ion/lithium_graphics.VertexDeclaration</a> class that contains position, color and texture data.</p>\n<p>If <a>lithium_ion/lithium_graphics.VertexDeclaration.VertexDeclaration-positionColorTexture.simdAligned</a> is set to true then each <a>lithium_ion/lithium_graphics.VertexElement</a> will be aligned\nto a 128-bit value.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]},"simdAligned":{"name":"simdAligned","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]}},"annotations":[]},"positionNormalTexture":{"name":"positionNormalTexture","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.VertexDeclaration-positionNormalTexture","comment":"<p>Creates an instance of the <a>lithium_ion/lithium_graphics.VertexDeclaration</a> class that contains position, normal and texture data.</p>\n<p>If <a>lithium_ion/lithium_graphics.VertexDeclaration.VertexDeclaration-positionNormalTexture.simdAligned</a> is set to true then each <a>lithium_ion/lithium_graphics.VertexElement</a> will be aligned\nto a 128-bit value.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]},"simdAligned":{"name":"simdAligned","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]}},"annotations":[]},"positionTexture":{"name":"positionTexture","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.VertexDeclaration-positionTexture","comment":"<p>Creates an instance of the <a>lithium_ion/lithium_graphics.VertexDeclaration</a> class that contains position and texture data.</p>\n<p>If <a>lithium_ion/lithium_graphics.VertexDeclaration.VertexDeclaration-positionTexture.simdAligned</a> is set to true then each <a>lithium_ion/lithium_graphics.VertexElement</a> will be aligned\nto a 128-bit value.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"device":{"name":"device","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"value":"null","annotations":[]},"simdAligned":{"name":"simdAligned","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]}},"annotations":[]}},"operators":{},"methods":{"getStride":{"name":"getStride","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.getStride","comment":"<p>Gets the stride for the vertex buffer at the given <a>lithium_ion/lithium_graphics.VertexDeclaration.getStride.index</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getInstanceStepRate":{"name":"getInstanceStepRate","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.getInstanceStepRate","comment":"<p>Gets whether the vertex buffer at the given <a>lithium_ion/lithium_graphics.VertexDeclaration.getInstanceStepRate.index</a> holds per instance data.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"hasElement":{"name":"hasElement","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.hasElement","comment":"<p>Queries whether a <a>lithium_ion/lithium_graphics.VertexElement</a> with the given <a>lithium_ion/lithium_graphics.VertexDeclaration.hasElement.usage</a> and <a>lithium_ion/lithium_graphics.VertexDeclaration.hasElement.usageIndex</a> is present.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"usage":{"name":"usage","optional":false,"named":false,"default":false,"type":[{"outer":"lithium_ion/lithium_graphics.VertexElementUsage","inner":[]}],"value":"null","annotations":[]},"usageIndex":{"name":"usageIndex","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"dispose":{"name":"dispose","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.dispose","comment":"<p>Immediately releases the unmanaged resources used by this object.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>lithium_ion/lithium_graphics.VertexDeclaration.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]},"isDisposed":{"name":"isDisposed","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.isDisposed","comment":"<p>Whether the object has been disposed</p>","commentFrom":"","inheritedFrom":"lithium_graphics.GraphicsResource.isDisposed","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"graphicsDevice":{"name":"graphicsDevice","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.graphicsDevice","comment":"<p>The <a>lithium_ion/lithium_graphics.GraphicsDevice</a> the resource is bound to.</p>","commentFrom":"","inheritedFrom":"lithium_graphics.GraphicsResource.graphicsDevice","static":false,"abstract":false,"constant":false,"return":[{"outer":"lithium_ion/lithium_graphics.GraphicsDevice","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>lithium_ion/lithium_graphics.VertexDeclaration.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>lithium_ion/lithium_graphics.VertexDeclaration.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.noSuchMethod","comment":"<p><a>lithium_ion/lithium_graphics.VertexDeclaration.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>lithium_ion/lithium_graphics.VertexDeclaration.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>lithium_ion/lithium_graphics.VertexDeclaration.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>lithium_ion/lithium_graphics.VertexDeclaration.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"dispose":{"name":"dispose","qualifiedName":"lithium_ion/lithium_graphics.VertexDeclaration.dispose","comment":"<p>Immediately releases the unmanaged resources used by this object.</p>","commentFrom":"","inheritedFrom":"lithium_graphics.GraphicsResource.dispose","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}